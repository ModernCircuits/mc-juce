---
stages:
  - build

win:msvc:release:
  stage: build
  tags:
    - mc-windows
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    GIT_STRATEGY: clone
  script:
    - Set-Location $env:CI_PROJECT_DIR
    - New-Item -Path cmake-build-release -ItemType Directory
    - Set-Location cmake-build-release
    - cmake -S ..
    - cmake --build . --config Release
    - ctest
    - Set-Location $env:CI_PROJECT_DIR
  dependencies: [ ]

mac:xcode:release:
  stage: build
  tags:
    - mc-macos
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - cd $CI_PROJECT_DIR
    - cmake -S. -GNinja -Bcmake-build-release -DCMAKE_BUILD_TYPE=Release
    - cmake --build cmake-build-release
    - cd cmake-build-release
    - ctest
    - cd $CI_PROJECT_DIR
  dependencies: [ ]

linux:clang:release:
  stage: build
  tags:
    - mc-linux
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    CC: clang
    CXX: clang++
  script:
    - cd $CI_PROJECT_DIR
    - cmake -S. -GNinja -Bcmake-build-release -DCMAKE_BUILD_TYPE=Release
    - cmake --build cmake-build-release
    - cd cmake-build-release
    - ctest
    - cd $CI_PROJECT_DIR
  dependencies: [ ]

linux:gcc:coverage:
  stage: build
  only:
    - main
  tags:
    - mc-linux
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - make coverage
    - bash <(curl -s https://codecov.io/bash) -f cmake-build-coverage/cov.info
    - find . -type f -executable -iname "*_Test*" -exec sh -c "{} -r junit -o {}-results.xml" \;
  dependencies: [ ]
  artifacts:
    when: always
    reports:
      junit: cmake-build-coverage/**/*-results.xml